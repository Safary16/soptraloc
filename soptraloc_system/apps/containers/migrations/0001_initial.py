# Generated by Django 5.2.6 on 2025-09-28 18:21

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Agency",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("name", models.CharField(max_length=100, verbose_name="Nombre")),
                (
                    "code",
                    models.CharField(max_length=20, unique=True, verbose_name="Código"),
                ),
                (
                    "contact_info",
                    models.TextField(
                        blank=True, verbose_name="Información de contacto"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Agencia",
                "verbose_name_plural": "Agencias",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Container",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("container_number", models.CharField(max_length=50, unique=True)),
                (
                    "container_type",
                    models.CharField(
                        choices=[
                            ("20ft", "20 pies"),
                            ("40ft", "40 pies"),
                            ("40hc", "40 pies HC"),
                            ("40hr", "40 pies HR"),
                            ("40hn", "40 pies HN"),
                            ("20st", "20 pies ST"),
                            ("40h", "40 pies H"),
                            ("45ft", "45 pies"),
                            ("reefer", "Refrigerado"),
                            ("tank", "Tanque"),
                            ("flat_rack", "Flat Rack"),
                            ("open_top", "Open Top"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("available", "Disponible"),
                            ("in_transit", "En Tránsito"),
                            ("loading", "Cargando"),
                            ("unloading", "Descargando"),
                            ("maintenance", "Mantenimiento"),
                            ("damaged", "Dañado"),
                            ("out_of_service", "Fuera de Servicio"),
                            ("POR_ARRIBAR", "Por Arribar"),
                            ("EN_SECUENCIA", "En Secuencia"),
                            ("DESCARGADO", "Descargado"),
                            ("LIBERADO", "Liberado"),
                            ("PROGRAMADO", "Programado"),
                            ("FINALIZADO", "Finalizado"),
                            ("TRG", "TRG"),
                            ("SECUENCIADO", "Secuenciado"),
                        ],
                        default="available",
                        max_length=20,
                    ),
                ),
                (
                    "position_status",
                    models.CharField(
                        choices=[
                            ("floor", "En Piso"),
                            ("chassis", "En Chasis"),
                            ("warehouse", "En Almacén"),
                        ],
                        default="floor",
                        max_length=20,
                    ),
                ),
                (
                    "weight_empty",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Peso vacío en kg",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "weight_loaded",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Peso cargado en kg",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "max_weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Peso máximo permitido en kg",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "sequence_id",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="ID Secuencia"
                    ),
                ),
                (
                    "port",
                    models.CharField(blank=True, max_length=10, verbose_name="Puerto"),
                ),
                ("eta", models.DateField(blank=True, null=True, verbose_name="ETA")),
                (
                    "cargo_description",
                    models.TextField(blank=True, verbose_name="Descripción de carga"),
                ),
                (
                    "cargo_weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Peso carga",
                    ),
                ),
                (
                    "total_weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Peso total",
                    ),
                ),
                (
                    "release_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha liberación"
                    ),
                ),
                (
                    "release_time",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Hora liberación"
                    ),
                ),
                (
                    "scheduled_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha programación"
                    ),
                ),
                (
                    "scheduled_time",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Hora programación"
                    ),
                ),
                (
                    "cd_arrival_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha arribo CD"
                    ),
                ),
                (
                    "cd_arrival_time",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Hora arribo CD"
                    ),
                ),
                (
                    "cd_location",
                    models.CharField(blank=True, max_length=100, verbose_name="CD"),
                ),
                (
                    "discharge_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha descarga (GPS)"
                    ),
                ),
                (
                    "discharge_time",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Hora descarga"
                    ),
                ),
                (
                    "return_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha devolución"
                    ),
                ),
                ("has_eir", models.BooleanField(default=False, verbose_name="EIR")),
                (
                    "deposit_return",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Dep/Dev"
                    ),
                ),
                (
                    "free_days",
                    models.IntegerField(default=0, verbose_name="Días libres"),
                ),
                (
                    "demurrage_date",
                    models.DateField(blank=True, null=True, verbose_name="Demurrage"),
                ),
                (
                    "overtime_2h",
                    models.IntegerField(
                        default=0, verbose_name="Sobreestadía región (x ciclo 2 horas)"
                    ),
                ),
                (
                    "overtime_4h",
                    models.IntegerField(
                        default=0, verbose_name="Sobreestadía (x ciclo de 4 horas)"
                    ),
                ),
                (
                    "storage_location",
                    models.CharField(blank=True, max_length=50, verbose_name="Almc"),
                ),
                (
                    "extra_storage_days",
                    models.IntegerField(
                        default=0, verbose_name="Días extras de almacenaje"
                    ),
                ),
                (
                    "chassis_status",
                    models.IntegerField(default=0, verbose_name="E.CHASIS"),
                ),
                (
                    "service_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("DIRECTO", "Directo"),
                            ("INDIRECTO_DEPOSITO", "Indirecto Depósito"),
                            ("REEFER", "Reefer"),
                        ],
                        default="INDIRECTO_DEPOSITO",
                        max_length=30,
                        verbose_name="Tipo de servicio",
                    ),
                ),
                (
                    "additional_service",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Servicio adicional"
                    ),
                ),
                ("observation_1", models.TextField(blank=True, verbose_name="OBS 1")),
                ("observation_2", models.TextField(blank=True, verbose_name="OBS 2")),
                (
                    "direct_service",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Servicio directo"
                    ),
                ),
                (
                    "last_update_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha actualización"
                    ),
                ),
                (
                    "last_update_time",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Hora actualización"
                    ),
                ),
                (
                    "calculated_days",
                    models.IntegerField(default=0, verbose_name="Días calculados"),
                ),
                ("seal_number", models.CharField(blank=True, max_length=50)),
                ("customs_document", models.CharField(blank=True, max_length=100)),
                ("special_requirements", models.TextField(blank=True)),
                (
                    "agency",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="containers.agency",
                        verbose_name="Agencia",
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="import_containers",
                        to="core.company",
                        verbose_name="Cliente",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "current_location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="current_containers",
                        to="core.location",
                    ),
                ),
                (
                    "current_vehicle",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.vehicle",
                    ),
                ),
                (
                    "owner_company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="containers",
                        to="core.company",
                    ),
                ),
                (
                    "terminal",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="terminal_containers",
                        to="core.location",
                        verbose_name="Terminal",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Contenedor",
                "verbose_name_plural": "Contenedores",
            },
        ),
        migrations.CreateModel(
            name="ContainerDocument",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("bill_of_lading", "Conocimiento de Embarque"),
                            ("packing_list", "Lista de Empaque"),
                            ("invoice", "Factura"),
                            ("certificate", "Certificado"),
                            ("customs", "Documento Aduanero"),
                            ("inspection", "Inspección"),
                            ("other", "Otro"),
                        ],
                        max_length=30,
                    ),
                ),
                ("document_number", models.CharField(max_length=100)),
                ("document_date", models.DateField()),
                ("description", models.TextField(blank=True)),
                (
                    "file",
                    models.FileField(
                        blank=True, null=True, upload_to="container_documents/"
                    ),
                ),
                (
                    "container",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="containers.container",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Documento de Contenedor",
                "verbose_name_plural": "Documentos de Contenedores",
            },
        ),
        migrations.CreateModel(
            name="ContainerInspection",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "inspection_type",
                    models.CharField(
                        choices=[
                            ("entry", "Ingreso"),
                            ("exit", "Salida"),
                            ("maintenance", "Mantenimiento"),
                            ("damage", "Daños"),
                            ("customs", "Aduanera"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "inspection_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("inspector_name", models.CharField(max_length=200)),
                (
                    "overall_condition",
                    models.CharField(
                        choices=[
                            ("excellent", "Excelente"),
                            ("good", "Bueno"),
                            ("fair", "Regular"),
                            ("poor", "Malo"),
                            ("damaged", "Dañado"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "exterior_condition",
                    models.CharField(
                        choices=[
                            ("excellent", "Excelente"),
                            ("good", "Bueno"),
                            ("fair", "Regular"),
                            ("poor", "Malo"),
                            ("damaged", "Dañado"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "interior_condition",
                    models.CharField(
                        choices=[
                            ("excellent", "Excelente"),
                            ("good", "Bueno"),
                            ("fair", "Regular"),
                            ("poor", "Malo"),
                            ("damaged", "Dañado"),
                        ],
                        max_length=20,
                    ),
                ),
                ("observations", models.TextField(blank=True)),
                ("damage_description", models.TextField(blank=True)),
                ("repair_required", models.BooleanField(default=False)),
                ("repair_notes", models.TextField(blank=True)),
                (
                    "photos",
                    models.FileField(
                        blank=True, null=True, upload_to="container_inspections/"
                    ),
                ),
                (
                    "container",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inspections",
                        to="containers.container",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Inspección de Contenedor",
                "verbose_name_plural": "Inspecciones de Contenedores",
                "ordering": ["-inspection_date"],
            },
        ),
        migrations.CreateModel(
            name="ContainerMovement",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "movement_type",
                    models.CharField(
                        choices=[
                            ("load_chassis", "Cargar en Chasis"),
                            ("unload_chassis", "Descargar de Chasis"),
                            ("transfer_warehouse", "Transferir a Almacén"),
                            ("transfer_location", "Transferir Ubicación"),
                            ("maintenance_in", "Ingreso a Mantenimiento"),
                            ("maintenance_out", "Salida de Mantenimiento"),
                            ("import", "Importación"),
                            ("export", "Exportación"),
                            ("PICKUP", "Retiro"),
                            ("DELIVERY", "Entrega"),
                            ("STORAGE_IN", "Ingreso a almacén"),
                            ("STORAGE_OUT", "Salida de almacén"),
                            ("CHASSIS_MOUNT", "Montaje en chasis"),
                            ("CHASSIS_DISMOUNT", "Desmontaje de chasis"),
                            ("TRANSFER", "Transferencia"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "movement_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "scheduled_datetime",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha/hora programada"
                    ),
                ),
                (
                    "actual_datetime",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha/hora real"
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                (
                    "weight_at_movement",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "is_completed",
                    models.BooleanField(default=False, verbose_name="Completado"),
                ),
                (
                    "container",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="container_movements",
                        to="containers.container",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "from_location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="container_movements_from",
                        to="core.location",
                    ),
                ),
                (
                    "from_vehicle",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="container_movements_from",
                        to="core.vehicle",
                    ),
                ),
                (
                    "movement_code",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="container_movements",
                        to="core.movementcode",
                    ),
                ),
                (
                    "to_location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="container_movements_to",
                        to="core.location",
                    ),
                ),
                (
                    "to_vehicle",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="container_movements_to",
                        to="core.vehicle",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Movimiento de Contenedor",
                "verbose_name_plural": "Movimientos de Contenedores",
                "ordering": ["-movement_date"],
            },
        ),
        migrations.CreateModel(
            name="ShippingLine",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("name", models.CharField(max_length=100, verbose_name="Nombre")),
                (
                    "code",
                    models.CharField(max_length=20, unique=True, verbose_name="Código"),
                ),
                (
                    "contact_info",
                    models.TextField(
                        blank=True, verbose_name="Información de contacto"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Línea Naviera",
                "verbose_name_plural": "Líneas Navieras",
                "ordering": ["name"],
            },
        ),
        migrations.AddField(
            model_name="container",
            name="shipping_line",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="containers.shippingline",
                verbose_name="Cía Naviera/Línea",
            ),
        ),
        migrations.CreateModel(
            name="Vessel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Nombre de la nave"),
                ),
                (
                    "imo_number",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Número IMO"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "shipping_line",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="containers.shippingline",
                        verbose_name="Línea naviera",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Nave",
                "verbose_name_plural": "Naves",
                "ordering": ["name"],
            },
        ),
        migrations.AddField(
            model_name="container",
            name="vessel",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="containers.vessel",
                verbose_name="Nave",
            ),
        ),
    ]
